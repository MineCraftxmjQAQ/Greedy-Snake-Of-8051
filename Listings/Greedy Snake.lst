C51 COMPILER V9.54   GREEDY_SNAKE                                                          01/08/2024 18:46:07 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE GREEDY_SNAKE
OBJECT MODULE PLACED IN .\Objects\Greedy Snake.obj
COMPILER INVOKED BY: D:\Program Files\Keil_v5\C51\BIN\C51.EXE Greedy Snake.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\Greedy Snake.lst) TABS(2) OBJECT(.\Objects\Greedy Snake.obj)

line level    source

   1          #include<reg51.h>
   2          #include<stdlib.h>
   3          #include<intrins.h>
   4          
   5          #define GPIO_DIG P0
   6          #define GPIO_KEY P1
   7          #define LED P2
   8          
   9          sbit LSA=P2^2;
  10          sbit LSB=P2^3;
  11          sbit LSC=P2^4;
  12          sbit RANDOM_EXIT=P3^0;
  13          sbit RANDOM_CREATE=P3^1;
  14          sbit RESET=P3^3;
  15          sbit SER=P3^4;
  16          sbit RCLK=P3^5;
  17          sbit SRCLK=P3^6;
  18          
  19          typedef unsigned char u8;
  20          typedef unsigned int u16;
  21          
  22          u8 code smgduan[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};//ÊýÂë¹Ü×Ö·û¶¨ÒåÊý×é
  23          u8 code TAB[8]={0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};//8*8LEDµãÕóÉ¨ÃèÊý×é
  24          
  25          u8 FRESH[8]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//8*8LEDµãÕóË¢ÐÂÊý×é
  26          u8 SNAKE[64]=
  27          {
  28                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  29                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  30                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  31                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  32                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  33                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  34                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  35                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  36          };//Ì°Ê³Éß×ø±ê¼ÇÂ¼Êý×é
  37          
  38          u8 random(u16 seed,u8 MIN,u8 MAX)//Ëæ»úÊýÉú³Éº¯Êý
  39          {
  40   1        srand(seed);//Ëæ»úÊý³õÊ¼»¯
  41   1        return rand()%(MAX-MIN+1)+MIN;
  42   1      }
  43          
  44          void delay(u16 i)//ÑÓ³Ùº¯Êý
  45          {
  46   1        while(i--);
  47   1      }
  48          
  49          void Hc595SendByte(u8 dat)//8*8LEDµãÕóËÍÏÔº¯Êý
  50          {
  51   1        u8 a;
  52   1        SRCLK=0;              
  53   1        RCLK=0;                
  54   1        for(a=0;a<8;a++) 
C51 COMPILER V9.54   GREEDY_SNAKE                                                          01/08/2024 18:46:07 PAGE 2   

  55   1        {
  56   2          SER=dat>>7;
  57   2          dat<<=1; 
  58   2          SRCLK=1;
  59   2          _nop_();
  60   2          _nop_();
  61   2          SRCLK=0;       
  62   2        }
  63   1        RCLK=1;
  64   1        _nop_();
  65   1        _nop_();
  66   1        RCLK=0;     
  67   1      }
  68          
  69          u8 KeyDown(void)//¾ØÕó¼üÅÌÉ¨Ãèº¯Êý
  70          {
  71   1        u8 KeyValue=0x00;
  72   1        GPIO_KEY=0x0f;
  73   1        if(GPIO_KEY!=0x0f)
  74   1        {
  75   2          delay(1000);
  76   2          if(GPIO_KEY!=0x0f)
  77   2          {
  78   3            GPIO_KEY=0X0f;
  79   3            switch(GPIO_KEY)
  80   3            {
  81   4              case(0X07):KeyValue=0x00;break;
  82   4              case(0X0b):KeyValue=0x01;break;
  83   4              case(0X0d):KeyValue=0x02;break;
  84   4              case(0X0e):KeyValue=0x03;break;
  85   4            }
  86   3            GPIO_KEY=0Xf0;
  87   3            switch(GPIO_KEY)
  88   3            {
  89   4              case(0X70):break;
  90   4              case(0Xb0):KeyValue+=0x04;break;
  91   4              case(0Xd0):KeyValue+=0x08;break;
  92   4              case(0Xe0):KeyValue+=0x0c;break;
  93   4            }
  94   3          }
  95   2        }
  96   1        return KeyValue;
  97   1      }
  98          
  99          u8 next(u8 direct,position)//Ì°³ÔÉßÉßÍ·Ç°½ø·½ÏòÏÂÒ»×ø±ê¼ÆËãº¯Êý,ÔÊÐí´©Ô½±ß½ç
 100          {
 101   1        u8 temp;
 102   1        if(direct==0x04)//left
 103   1        {
 104   2          position-=0x08;
 105   2          if(position<0)position+=0x40;
 106   2        }
 107   1        else if(direct==0x09)//down
 108   1        {
 109   2          if(position==0)
 110   2          {
 111   3            position=0x07;
 112   3          }
 113   2          else
 114   2          {
 115   3            temp=position/8;
 116   3            position-=0x01;
C51 COMPILER V9.54   GREEDY_SNAKE                                                          01/08/2024 18:46:07 PAGE 3   

 117   3            if(temp!=position/8)position+=8;
 118   3          }
 119   2        }
 120   1        else if(direct==0x06)//right
 121   1        {
 122   2          position+=0x08;
 123   2          if(position>0x3f)position-=0x40;
 124   2        }
 125   1        else if(direct==0x01)//up
 126   1        {
 127   2          temp=position/8;
 128   2          position+=0x01;
 129   2          if(temp!=position/8)position-=8;
 130   2        }
 131   1        else
 132   1        {
 133   2          position=0xff;
 134   2        }
 135   1        return position;
 136   1      }
 137          
 138          u8 main()//Ö÷º¯Êý
 139          {   
 140   1        u16 seed;//Ëæ»úÊýÖÖ×Ó
 141   1        u8 i,j,direct,food,length,flag;
 142   1        seed=0xffff;//Ëæ»úÊýÖÖ×Ó¸³Öµ
 143   1        i=0;
 144   1        j=0;
 145   1        direct=0;
 146   1        food=0;
 147   1        length=0;
 148   1        flag=0;
 149   1        while(1)//Ö÷Ñ­»·
 150   1        {
 151   2          if(RANDOM_CREATE==0)//°´ÏÂ¶ÀÁ¢°´¼üK1
 152   2          {
 153   3            delay(1000);
 154   3            if(RANDOM_CREATE==0)//È·ÈÏK1°´ÏÂºóLEDÄ£¿éÅÜÂíµÆ
 155   3            {
 156   4              direct=0xfe;
 157   4              LED=direct;
 158   4              delay(5000);
 159   4              for(i=0;i<4;i++)
 160   4              {
 161   5                direct=direct<<1;
 162   5                LED=direct;
 163   5                delay(5000);
 164   5              }
 165   4              while(RANDOM_CREATE==0)
 166   4              {
 167   5                seed--;//µ±K1±£³Ö°´ÏÂÊ±¸ù¾Ý°´ÏÂµÄÊ±¼ä¸üÐÂËæ»úÊýÖÖ×Ó
 168   5                j=direct&0x80;
 169   5                j=j>>7;
 170   5                direct=direct<<1;
 171   5                direct=direct&0xfe;
 172   5                direct=direct|j;
 173   5                LED=direct;
 174   5                delay(5000);
 175   5              } 
 176   4            }
 177   3          }
 178   2          if(RANDOM_EXIT==0 && seed!=0xffff)//°´ÏÂ¶ÀÁ¢°´¼üK2
C51 COMPILER V9.54   GREEDY_SNAKE                                                          01/08/2024 18:46:07 PAGE 4   

 179   2          {
 180   3            delay(1000);
 181   3            if(RANDOM_EXIT==0)//È·ÈÏK2°´ÏÂºóLEDÄ£¿éÏûÏÔ²¢½øÈëÓÎÏ·
 182   3            {
 183   4              LED=0xff;
 184   4              break;
 185   4            } 
 186   3          }
 187   2        }
 188   1        direct=random(seed--,0,3);//Ëæ»úÌ°³ÔÉßÆðÊ¼·½Ïò
 189   1        switch(direct)//ÐÞ¸Ä·½ÏòÎª·½Ïòº¯ÊýÖµ
 190   1        {
 191   2          case(0X00):direct=0x06;break;//right
 192   2          case(0X01):direct=0x01;break;//up
 193   2          case(0X02):direct=0x04;break;//left
 194   2          case(0X03):direct=0x09;break;//down
 195   2        }
 196   1        i=random(seed--,0,63);//Ëæ»úÉßÍ·³õÊ¼×ø±ê
 197   1        food=random(seed--,0,63);//Ëæ»úµÚÒ»¸öÊ³Îï×ø±ê
 198   1        while(i==food || i%8==food%8 || i/8==food/8)
 199   1        {
 200   2          food=random(seed--,0,63);//Èç¹ûÉßÍ·³õÊ¼×ø±êºÍµÚÒ»¸öÊ³Îï×ø±êÒ»ÖÂ»òÕßÉßÍ·³õÊ¼×ø±êµÄÐÐÁÐÉÏ´æÔÚµÚÒ»¸öÊ³ÎïÔòÖ
             -ØÐÂËæ»ú
 201   2        }
 202   1        SNAKE[0]=i;//ÉßÍ·³õÊ¼×ø±êÈëÌ°³ÔÉß×ø±ê¼ÇÂ¼Êý×é
 203   1        length=0x01;//³õÊ¼Ì°³ÔÉß³¤¶ÈÎª1
 204   1        LED=0xff^length;//Ì°³ÔÉß³¤¶ÈÖµÈ¡·´ºóËÍÏÔLEDÄ£¿é
 205   1        flag=0x00;//Õý³£ÓÎÏ·Ê±±êÊ¶Îª0
 206   1        FRESH[i/8]=_crol_(0x01,i%8);//ÉßÍ·³õÊ¼×ø±êËÍ8*8LEDµãÕóË¢ÐÂÊý×é
 207   1        FRESH[food/8]=_crol_(0x01,food%8);//µÚÒ»¸öÊ³Îï×ø±êËÍ8*8LEDµãÕóË¢ÐÂÊý×é
 208   1        while(1)//ÓÎÏ·Ñ­»·
 209   1        {
 210   2          j=KeyDown();
 211   2          if(length==1)//µ±Ì°³ÔÉß³¤¶ÈÎª1Ê±ÅÐ¶Ï¾ØÕó¼üÅÌ°´ÏÂ·½Ïò
 212   2          {
 213   3            if(j==0x01 || j==0x04 || j==0x06 || j==0x09)
 214   3            {
 215   4              direct=j;
 216   4            }
 217   3          }
 218   2          else//µ±Ì°³ÔÉß³¤¶È²»Îª1Ê±ÅÐ¶Ï¾ØÕó¼üÅÌ°´ÏÂ·½Ïò(Ì°³ÔÉß³¤¶È²»Îª1Ê±²»ÔÊÐíÔ­µØµôÍ·)
 219   2          {
 220   3            if((j==0x01 && direct!=0x09)||(j==0x04 && direct!=0x06)||(j==0x06 && direct!=0x04)||(j==0x09 && direct!
             -=0x01))
 221   3            {
 222   4              direct=j;
 223   4            }
 224   3          }
 225   2          j=next(direct,SNAKE[0]);//¼ÆËãÉßÍ·Ç°½øµÄÏÂÒ»¸ö×ø±ê
 226   2          if(flag==0x00)//ÓÎÏ·Õý³£×´Ì¬
 227   2          {
 228   3            for(i=1;i<length;i++)
 229   3            {
 230   4              if(SNAKE[0]==SNAKE[i])break;//ÅÐ¶ÏÉßÍ·ÊÇ·ñ×²ÉÏÉßÉí
 231   4            }
 232   3            if(i<length)
 233   3            {
 234   4              flag=0x01;//ÉßÍ·×²ÉÏÉßÉí½øÈë½áÊø×´Ì¬
 235   4            }
 236   3          }
 237   2          if(flag==0x01)//ÓÎÏ·½áÊø
 238   2          {
C51 COMPILER V9.54   GREEDY_SNAKE                                                          01/08/2024 18:46:07 PAGE 5   

 239   3            flag=length%0x0a;//¼ÆËãÌ°³ÔÉß³¤¶ÈBCDÂë¸öÎ»
 240   3            length/=0x0a;//¼ÆËãÌ°³ÔÉß³¤¶ÈBCDÂëÊ®Î»
 241   3            LSB=0;
 242   3            LSC=0;
 243   3            while(1)
 244   3            {
 245   4              LSA=0;
 246   4              P0=smgduan[flag];//ËÍÏÔ¶¯Ì¬ÊýÂë¹Ü¸öÎ»
 247   4              delay(500);
 248   4              LSA=1;
 249   4              P0=smgduan[length];//ËÍÏÔ¶¯Ì¬ÊýÂë¹ÜÊ®Î»
 250   4              delay(500);
 251   4              if(RESET==0)//°´ÏÂ¶ÀÁ¢°´¼üK4
 252   4              {
 253   5                delay(1000);
 254   5                if(RESET==0)//È·ÈÏK4°´ÏÂºóÖ÷º¯Êý½áÊø,¿ÉÖØÐÂ¿ªÊ¼ÓÎÏ·
 255   5                {
 256   6                  return 0;
 257   6                } 
 258   5              }
 259   4            }
 260   3          }
 261   2          if(j!=food)//Èç¹ûÉßÍ·µÄÏÂÒ»¸ö×ø±ê²»ÊÇÊ³Îï
 262   2          {
 263   3            for(i=length-1;i>0;i--)
 264   3            {
 265   4              SNAKE[i]=SNAKE[i-1];//¸üÐÂÌ°³ÔÉßÉßÉí×ø±ê
 266   4            }
 267   3            SNAKE[0]=j;//¸üÐÂÉßÍ·×ø±ê
 268   3          }
 269   2          else//Èç¹ûÉßÍ·µÄÏÂÒ»¸ö×ø±êÊÇÊ³Îï
 270   2          {
 271   3            length++;//Ì°³ÔÉß³¤¶È+1
 272   3            LED=0xff^length;//Ì°³ÔÉß³¤¶ÈÖµÈ¡·´ºóËÍÏÔLEDÄ£¿é
 273   3            for(i=length-1;i>0;i--)
 274   3            {
 275   4              SNAKE[i]=SNAKE[i-1];//¸üÐÂÌ°³ÔÉßÉßÉí×ø±ê
 276   4            }
 277   3            SNAKE[0]=j;//¸üÐÂÉßÍ·×ø±ê
 278   3            if(length!=0x40)//Èç¹ûÌ°³ÔÉß³¤¶ÈÃ»ÓÐÕ¼ÂúÕû¸ö8*8LEDµãÕó,Ôò»¹ÓÐ¿Õ¼ä¿ÉÒÔÉú³ÉÊ³Îï
 279   3            {
 280   4              while(1)
 281   4              {
 282   5                food=random(seed--,0,63);//Ëæ»úÊ³Îï×ø±ê
 283   5                for(i=0;i<length;i++)
 284   5                {
 285   6                  if(food==SNAKE[i])break;//Èç¹ûÌ°³ÔÉßÈ«Ìå×ø±êºÍÊ³Îï×ø±êÒ»ÖÂÔòÖØÐÂËæ»ú
 286   6                }
 287   5                if(i>=length)break;
 288   5              }
 289   4            }
 290   3            else//Èç¹ûÌ°³ÔÉß³¤¶ÈÕ¼ÂúÕû¸ö8*8LEDµãÕó,ÓÎÏ·½áÊø
 291   3            {
 292   4              flag=length%0x0a;//¼ÆËãÌ°³ÔÉß³¤¶ÈBCDÂë¸öÎ»
 293   4              length/=0x0a;//¼ÆËãÌ°³ÔÉß³¤¶ÈBCDÂëÊ®Î»
 294   4              LSB=0;
 295   4              LSC=0;
 296   4              while(1)
 297   4              {
 298   5                LSA=0;
 299   5                P0=smgduan[flag];//ËÍÏÔ¶¯Ì¬ÊýÂë¹Ü¸öÎ»
 300   5                delay(500);
C51 COMPILER V9.54   GREEDY_SNAKE                                                          01/08/2024 18:46:07 PAGE 6   

 301   5                LSA=1;
 302   5                P0=smgduan[length];//ËÍÏÔ¶¯Ì¬ÊýÂë¹ÜÊ®Î»
 303   5                delay(500);
 304   5                if(RESET==0)//°´ÏÂ¶ÀÁ¢°´¼üK4
 305   5                {
 306   6                  delay(1000);
 307   6                  if(RESET==0)//È·ÈÏK4°´ÏÂºóÖ÷º¯Êý½áÊø,¿ÉÖØÐÂ¿ªÊ¼ÓÎÏ·
 308   6                  {
 309   7                    return 0;
 310   7                  } 
 311   6                }
 312   5              }
 313   4            }
 314   3          }
 315   2          for(i=0;i<8;i++)//¸´Î»ÆÁÄ»Ë¢ÐÂËÍÏÔÊý×é
 316   2          {
 317   3            FRESH[i]=0x00;
 318   3          }
 319   2          for(i=0;i<length;i++)
 320   2          {
 321   3            FRESH[SNAKE[i]/8]|=_crol_(0x01,SNAKE[i]%8);//Ì°³ÔÉßÈ«Ìå×ø±êËÍ8*8LEDµãÕóË¢ÐÂÊý×é
 322   3          }
 323   2          FRESH[food/8]|=_crol_(0x01,food%8);//Ê³Îï×ø±êËÍ8*8LEDµãÕóË¢ÐÂÊý×é
 324   2          for(i=0;i<8;i++)//Ë¢ÐÂ8*8LEDµãÕó
 325   2          {
 326   3            P0=TAB[i];
 327   3            Hc595SendByte(FRESH[i]);
 328   3            delay(100);
 329   3            P0=0xff;
 330   3            Hc595SendByte(0x00);
 331   3          }
 332   2          delay(2000);
 333   2        }
 334   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1244    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     72      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
